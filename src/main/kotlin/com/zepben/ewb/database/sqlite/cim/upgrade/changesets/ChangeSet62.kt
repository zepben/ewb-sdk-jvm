/*
 * Copyright 2025 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

package com.zepben.ewb.database.sqlite.cim.upgrade.changesets

import com.zepben.ewb.database.paths.DatabaseType
import com.zepben.ewb.database.sqlite.cim.upgrade.Change
import com.zepben.ewb.database.sqlite.cim.upgrade.ChangeSet

//
// NOTE: We re-create all indexes because there were errors in both old upgrade scripts, and some actual schema creation indexes not
//       calling their super classes. It has been done this way to prevent having to figure out, through all the different paths, which
//       indexes were potentially missing.
//

internal fun changeSet62() = ChangeSet(
    62,
    listOf(
        // Network changes
        `retype missed non-null network columns`,
        `retype incorrectly converted network columns`,
        `add missing network indexes`,

        // Diagram changes
        `retype incorrectly converted columns diagram`,
        `add missing diagram indexes`,

        // Customer changes
        `retype missed non-null columns customer`,
        `retype incorrectly converted columns customer`,
        `add missing customer indexes`,
    )
)

// ###################
// # Network Changes #
// ###################

@Suppress("ObjectPropertyName")
private val `retype missed non-null network columns` = Change(
    listOf(
        *alterToNullableWithIndex("battery_controls", "name", "TEXT"),
        *alterToNullableWithIndex("clamps", "name", "TEXT"),
        *alterToNullableWithIndex("cuts", "name", "TEXT"),
        *alterToNullableWithIndex("grounding_impedances", "name", "TEXT"),
        *alterToNullable("operational_restrictions", "comment", "TEXT"),
        *alterToNullableWithIndex("pan_demand_response_functions", "name", "TEXT"),
        *alterToNullableWithIndex("per_length_phase_impedances", "name", "TEXT"),
        *alterToNullableWithIndex("petersen_coils", "name", "TEXT"),
        *alterToNullable("poles", "classification", "TEXT"),
        *alterToNullableWithIndex("reactive_capability_curves", "name", "TEXT"),
        *alterToNullableWithIndex("static_var_compensators", "name", "TEXT"),
        *alterToNullableWithIndex("synchronous_machines", "name", "TEXT"),
        *alterToNullable("synchronous_machines", "num_controls", "INTEGER"),
        *alterToNullable("synchronous_machines", "control_enabled", "BOOLEAN"),
    ),
    targetDatabases = setOf(DatabaseType.NETWORK_MODEL)
)

@Suppress("ObjectPropertyName")
private val `retype incorrectly converted network columns` = Change(
    listOf(
        *alterToNullable("ac_line_segments", "num_diagram_objects", "INTEGER"),
        *alterToNullable("ac_line_segments", "num_controls", "INTEGER"),
        *alterToNullable("accumulators", "num_diagram_objects", "INTEGER"),
        *alterToNullable("analogs", "num_diagram_objects", "INTEGER"),
        *alterToNullable("analogs", "positive_flow_in", "BOOLEAN"),
        *alterToNullable("asset_owners", "num_diagram_objects", "INTEGER"),
        *alterToNullable("base_voltages", "num_diagram_objects", "INTEGER"),
        *alterToNullable("battery_controls", "num_diagram_objects", "INTEGER"),
        *alterToNullable("battery_controls", "num_controls", "INTEGER"),
        *alterToNullable("battery_units", "num_diagram_objects", "INTEGER"),
        *alterToNullable("battery_units", "num_controls", "INTEGER"),
        *alterToNullable("breakers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("breakers", "num_controls", "INTEGER"),
        *alterToNullable("busbar_sections", "num_diagram_objects", "INTEGER"),
        *alterToNullable("busbar_sections", "num_controls", "INTEGER"),
        *alterToNullable("cable_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("circuits", "num_diagram_objects", "INTEGER"),
        *alterToNullable("circuits", "num_controls", "INTEGER"),
        *alterToNullable("clamps", "num_diagram_objects", "INTEGER"),
        *alterToNullable("clamps", "num_controls", "INTEGER"),
        *alterToNullable("connectivity_nodes", "num_diagram_objects", "INTEGER"),
        *alterToNullable("controls", "num_diagram_objects", "INTEGER"),
        *alterToNullable("current_relays", "num_diagram_objects", "INTEGER"),
        *alterToNullable("current_relays", "num_controls", "INTEGER"),
        *alterToNullable("current_transformer_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("current_transformers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("current_transformers", "num_controls", "INTEGER"),
        *alterToNullable("cuts", "num_diagram_objects", "INTEGER"),
        *alterToNullable("cuts", "num_controls", "INTEGER"),
        *alterToNullable("disconnectors", "num_diagram_objects", "INTEGER"),
        *alterToNullable("disconnectors", "num_controls", "INTEGER"),
        *alterToNullable("discretes", "num_diagram_objects", "INTEGER"),
        *alterToNullable("distance_relays", "num_diagram_objects", "INTEGER"),
        *alterToNullable("distance_relays", "num_controls", "INTEGER"),
        *alterToNullable("energy_consumer_phases", "num_diagram_objects", "INTEGER"),
        *alterToNullable("energy_consumer_phases", "num_controls", "INTEGER"),
        *alterToNullable("energy_consumers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("energy_consumers", "num_controls", "INTEGER"),
        *alterToNullable("energy_consumers", "grounded", "BOOLEAN"),
        *alterToNullable("energy_source_phases", "num_diagram_objects", "INTEGER"),
        *alterToNullable("energy_source_phases", "num_controls", "INTEGER"),
        *alterToNullable("energy_sources", "num_diagram_objects", "INTEGER"),
        *alterToNullable("energy_sources", "num_controls", "INTEGER"),
        *alterToNullable("energy_sources", "is_external_grid", "BOOLEAN"),
        *alterToNullable("equivalent_branches", "num_diagram_objects", "INTEGER"),
        *alterToNullable("equivalent_branches", "num_controls", "INTEGER"),
        *alterToNullable("ev_charging_units", "num_diagram_objects", "INTEGER"),
        *alterToNullable("ev_charging_units", "num_controls", "INTEGER"),
        *alterToNullable("fault_indicators", "num_diagram_objects", "INTEGER"),
        *alterToNullable("fault_indicators", "num_controls", "INTEGER"),
        *alterToNullable("feeders", "num_diagram_objects", "INTEGER"),
        *alterToNullable("feeders", "num_controls", "INTEGER"),
        *alterToNullable("fuses", "num_diagram_objects", "INTEGER"),
        *alterToNullable("fuses", "num_controls", "INTEGER"),
        *alterToNullable("geographical_regions", "num_diagram_objects", "INTEGER"),
        *alterToNullable("grounds", "num_diagram_objects", "INTEGER"),
        *alterToNullable("grounds", "num_controls", "INTEGER"),
        *alterToNullable("ground_disconnectors", "num_diagram_objects", "INTEGER"),
        *alterToNullable("ground_disconnectors", "num_controls", "INTEGER"),
        *alterToNullable("grounding_impedances", "num_diagram_objects", "INTEGER"),
        *alterToNullable("grounding_impedances", "num_controls", "INTEGER"),
        *alterToNullable("jumpers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("jumpers", "num_controls", "INTEGER"),
        *alterToNullable("junctions", "num_diagram_objects", "INTEGER"),
        *alterToNullable("junctions", "num_controls", "INTEGER"),
        *alterToNullable("linear_shunt_compensators", "num_diagram_objects", "INTEGER"),
        *alterToNullable("linear_shunt_compensators", "num_controls", "INTEGER"),
        *alterToNullable("linear_shunt_compensators", "control_enabled", "BOOLEAN"),
        *alterToNullable("linear_shunt_compensators", "grounded", "BOOLEAN"),
        *alterToNullable("load_break_switches", "num_diagram_objects", "INTEGER"),
        *alterToNullable("load_break_switches", "num_controls", "INTEGER"),
        *alterToNullable("locations", "num_diagram_objects", "INTEGER"),
        *alterToNullable("loops", "num_diagram_objects", "INTEGER"),
        *alterToNullable("lv_feeders", "num_diagram_objects", "INTEGER"),
        *alterToNullable("lv_feeders", "num_controls", "INTEGER"),
        *alterToNullable("meters", "num_diagram_objects", "INTEGER"),
        *alterToNullable("no_load_tests", "num_diagram_objects", "INTEGER"),
        *alterToNullable("open_circuit_tests", "num_diagram_objects", "INTEGER"),
        *alterToNullable("operational_restrictions", "num_diagram_objects", "INTEGER"),
        *alterToNullable("organisations", "num_diagram_objects", "INTEGER"),
        *alterToNullable("overhead_wire_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("pan_demand_response_functions", "num_diagram_objects", "INTEGER"),
        *alterToNullable("per_length_phase_impedances", "num_diagram_objects", "INTEGER"),
        *alterToNullable("per_length_sequence_impedances", "num_diagram_objects", "INTEGER"),
        *alterToNullable("petersen_coils", "num_diagram_objects", "INTEGER"),
        *alterToNullable("petersen_coils", "num_controls", "INTEGER"),
        *alterToNullable("photo_voltaic_units", "num_diagram_objects", "INTEGER"),
        *alterToNullable("photo_voltaic_units", "num_controls", "INTEGER"),
        *alterToNullable("poles", "num_diagram_objects", "INTEGER"),
        *alterToNullable("potential_transformer_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("potential_transformers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("potential_transformers", "num_controls", "INTEGER"),
        *alterToNullable("power_electronics_connections", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_electronics_connections", "num_controls", "INTEGER"),
        *alterToNullable("power_electronics_connections", "control_enabled", "BOOLEAN"),
        *alterToNullable("power_electronics_connection_phases", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_electronics_connection_phases", "num_controls", "INTEGER"),
        *alterToNullable("power_electronics_wind_units", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_electronics_wind_units", "num_controls", "INTEGER"),
        *alterToNullable("power_transformer_ends", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_transformer_ends", "grounded", "BOOLEAN"),
        *alterToNullable("power_transformer_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_transformers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("power_transformers", "num_controls", "INTEGER"),
        *alterToNullable("protection_relay_schemes", "num_diagram_objects", "INTEGER"),
        *alterToNullable("protection_relay_systems", "num_diagram_objects", "INTEGER"),
        *alterToNullable("protection_relay_systems", "num_controls", "INTEGER"),
        *alterToNullable("ratio_tap_changers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("ratio_tap_changers", "num_controls", "INTEGER"),
        *alterToNullable("ratio_tap_changers", "control_enabled", "BOOLEAN"),
        *alterToNullable("reactive_capability_curves", "num_diagram_objects", "INTEGER"),
        *alterToNullable("reclosers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("reclosers", "num_controls", "INTEGER"),
        *alterToNullable("relay_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("remote_controls", "num_diagram_objects", "INTEGER"),
        *alterToNullable("remote_sources", "num_diagram_objects", "INTEGER"),
        *alterToNullable("series_compensators", "num_diagram_objects", "INTEGER"),
        *alterToNullable("series_compensators", "num_controls", "INTEGER"),
        *alterToNullable("short_circuit_tests", "num_diagram_objects", "INTEGER"),
        *alterToNullable("shunt_compensator_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("sites", "num_diagram_objects", "INTEGER"),
        *alterToNullable("sites", "num_controls", "INTEGER"),
        *alterToNullable("streetlights", "num_diagram_objects", "INTEGER"),
        *alterToNullable("sub_geographical_regions", "num_diagram_objects", "INTEGER"),
        *alterToNullable("substations", "num_diagram_objects", "INTEGER"),
        *alterToNullable("substations", "num_controls", "INTEGER"),
        *alterToNullable("static_var_compensators", "num_diagram_objects", "INTEGER"),
        *alterToNullable("static_var_compensators", "num_controls", "INTEGER"),
        *alterToNullable("static_var_compensators", "control_enabled", "BOOLEAN"),
        *alterToNullable("switch_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("synchronous_machines", "num_diagram_objects", "INTEGER"),
        *alterToNullable("synchronous_machines", "num_controls", "INTEGER"),
        *alterToNullable("synchronous_machines", "control_enabled", "BOOLEAN"),
        *alterToNullable("synchronous_machines", "earthing", "BOOLEAN"),
        *alterToNullable("tap_changer_controls", "num_diagram_objects", "INTEGER"),
        *alterToNullable("tap_changer_controls", "num_controls", "INTEGER"),
        *alterToNullable("terminals", "num_diagram_objects", "INTEGER"),
        *alterToNullable("transformer_end_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("transformer_star_impedances", "num_diagram_objects", "INTEGER"),
        *alterToNullable("transformer_tank_info", "num_diagram_objects", "INTEGER"),
        *alterToNullable("usage_points", "num_diagram_objects", "INTEGER"),
        *alterToNullable("usage_points", "is_virtual", "BOOLEAN"),
        *alterToNullable("voltage_relays", "num_diagram_objects", "INTEGER"),
        *alterToNullable("voltage_relays", "num_controls", "INTEGER"),
    ),
    targetDatabases = setOf(DatabaseType.NETWORK_MODEL)
)

@Suppress("ObjectPropertyName")
private val `add missing network indexes` = Change(
    listOf(
        "CREATE UNIQUE INDEX IF NOT EXISTS name_types_name ON name_types (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS names_identified_object_mrid_name_type_name_name ON names (identified_object_mrid, name_type_name, name);",
        "CREATE INDEX IF NOT EXISTS names_identified_object_mrid ON names (identified_object_mrid);",
        "CREATE INDEX IF NOT EXISTS names_name ON names (name);",
        "CREATE INDEX IF NOT EXISTS names_name_type_name ON names (name_type_name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS ac_line_segments_mrid ON ac_line_segments (mrid);",
        "CREATE INDEX IF NOT EXISTS ac_line_segments_name ON ac_line_segments (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS accumulators_mrid ON accumulators (mrid);",
        "CREATE INDEX IF NOT EXISTS accumulators_name ON accumulators (name);",
        "CREATE INDEX IF NOT EXISTS accumulators_power_system_resource_mrid ON accumulators (power_system_resource_mrid);",
        "CREATE INDEX IF NOT EXISTS accumulators_remote_source_mrid ON accumulators (remote_source_mrid);",
        "CREATE INDEX IF NOT EXISTS accumulators_terminal_mrid ON accumulators (terminal_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS analogs_mrid ON analogs (mrid);",
        "CREATE INDEX IF NOT EXISTS analogs_name ON analogs (name);",
        "CREATE INDEX IF NOT EXISTS analogs_power_system_resource_mrid ON analogs (power_system_resource_mrid);",
        "CREATE INDEX IF NOT EXISTS analogs_remote_source_mrid ON analogs (remote_source_mrid);",
        "CREATE INDEX IF NOT EXISTS analogs_terminal_mrid ON analogs (terminal_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS asset_organisation_roles_assets_asset_organisation_role_mrid_asset_mrid ON asset_organisation_roles_assets (asset_organisation_role_mrid, asset_mrid);",
        "CREATE INDEX IF NOT EXISTS asset_organisation_roles_assets_asset_organisation_role_mrid ON asset_organisation_roles_assets (asset_organisation_role_mrid);",
        "CREATE INDEX IF NOT EXISTS asset_organisation_roles_assets_asset_mrid ON asset_organisation_roles_assets (asset_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS assets_power_system_resources_asset_mrid_power_system_resource_mrid ON assets_power_system_resources (asset_mrid, power_system_resource_mrid);",
        "CREATE INDEX IF NOT EXISTS assets_power_system_resources_asset_mrid ON assets_power_system_resources (asset_mrid);",
        "CREATE INDEX IF NOT EXISTS assets_power_system_resources_power_system_resource_mrid ON assets_power_system_resources (power_system_resource_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS asset_owners_mrid ON asset_owners (mrid);",
        "CREATE INDEX IF NOT EXISTS asset_owners_name ON asset_owners (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS base_voltages_mrid ON base_voltages (mrid);",
        "CREATE INDEX IF NOT EXISTS base_voltages_name ON base_voltages (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS battery_controls_mrid ON battery_controls (mrid);",
        "CREATE INDEX IF NOT EXISTS battery_controls_name ON battery_controls (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS battery_units_mrid ON battery_units (mrid);",
        "CREATE INDEX IF NOT EXISTS battery_units_name ON battery_units (name);",
        "CREATE INDEX IF NOT EXISTS battery_units_power_electronics_connection_mrid ON battery_units (power_electronics_connection_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS battery_units_battery_controls_battery_unit_mrid_battery_control_mrid ON battery_units_battery_controls (battery_unit_mrid, battery_control_mrid);",
        "CREATE INDEX IF NOT EXISTS battery_units_battery_controls_battery_unit_mrid ON battery_units_battery_controls (battery_unit_mrid);",
        "CREATE INDEX IF NOT EXISTS battery_units_battery_controls_battery_control_mrid ON battery_units_battery_controls (battery_control_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS breakers_mrid ON breakers (mrid);",
        "CREATE INDEX IF NOT EXISTS breakers_name ON breakers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS busbar_sections_mrid ON busbar_sections (mrid);",
        "CREATE INDEX IF NOT EXISTS busbar_sections_name ON busbar_sections (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS cable_info_mrid ON cable_info (mrid);",
        "CREATE INDEX IF NOT EXISTS cable_info_name ON cable_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS circuits_mrid ON circuits (mrid);",
        "CREATE INDEX IF NOT EXISTS circuits_name ON circuits (name);",
        "CREATE INDEX IF NOT EXISTS circuits_loop_mrid ON circuits (loop_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS circuits_substations_circuit_mrid_substation_mrid ON circuits_substations (circuit_mrid, substation_mrid);",
        "CREATE INDEX IF NOT EXISTS circuits_substations_circuit_mrid ON circuits_substations (circuit_mrid);",
        "CREATE INDEX IF NOT EXISTS circuits_substations_substation_mrid ON circuits_substations (substation_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS circuits_terminals_circuit_mrid_terminal_mrid ON circuits_terminals (circuit_mrid, terminal_mrid);",
        "CREATE INDEX IF NOT EXISTS circuits_terminals_circuit_mrid ON circuits_terminals (circuit_mrid);",
        "CREATE INDEX IF NOT EXISTS circuits_terminals_terminal_mrid ON circuits_terminals (terminal_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS clamps_mrid ON clamps (mrid);",
        "CREATE INDEX IF NOT EXISTS clamps_name ON clamps (name);",
        "CREATE INDEX IF NOT EXISTS clamps_ac_line_segment_mrid ON clamps (ac_line_segment_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS connectivity_nodes_mrid ON connectivity_nodes (mrid);",
        "CREATE INDEX IF NOT EXISTS connectivity_nodes_name ON connectivity_nodes (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS controls_mrid ON controls (mrid);",
        "CREATE INDEX IF NOT EXISTS controls_name ON controls (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS current_relays_mrid ON current_relays (mrid);",
        "CREATE INDEX IF NOT EXISTS current_relays_name ON current_relays (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS current_transformer_info_mrid ON current_transformer_info (mrid);",
        "CREATE INDEX IF NOT EXISTS current_transformer_info_name ON current_transformer_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS current_transformers_mrid ON current_transformers (mrid);",
        "CREATE INDEX IF NOT EXISTS current_transformers_name ON current_transformers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS curve_data_curve_mrid_x_value ON curve_data (curve_mrid, x_value);",
        "CREATE INDEX IF NOT EXISTS curve_data_curve_mrid ON curve_data (curve_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS cuts_mrid ON cuts (mrid);",
        "CREATE INDEX IF NOT EXISTS cuts_name ON cuts (name);",
        "CREATE INDEX IF NOT EXISTS cuts_ac_line_segment_mrid ON cuts (ac_line_segment_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS disconnectors_mrid ON disconnectors (mrid);",
        "CREATE INDEX IF NOT EXISTS disconnectors_name ON disconnectors (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS discretes_mrid ON discretes (mrid);",
        "CREATE INDEX IF NOT EXISTS discretes_name ON discretes (name);",
        "CREATE INDEX IF NOT EXISTS discretes_power_system_resource_mrid ON discretes (power_system_resource_mrid);",
        "CREATE INDEX IF NOT EXISTS discretes_remote_source_mrid ON discretes (remote_source_mrid);",
        "CREATE INDEX IF NOT EXISTS discretes_terminal_mrid ON discretes (terminal_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS distance_relays_mrid ON distance_relays (mrid);",
        "CREATE INDEX IF NOT EXISTS distance_relays_name ON distance_relays (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS end_devices_end_device_functions_end_device_mrid_end_device_function_mrid ON end_devices_end_device_functions (end_device_mrid, end_device_function_mrid);",
        "CREATE INDEX IF NOT EXISTS end_devices_end_device_functions_end_device_mrid ON end_devices_end_device_functions (end_device_mrid);",
        "CREATE INDEX IF NOT EXISTS end_devices_end_device_functions_end_device_function_mrid ON end_devices_end_device_functions (end_device_function_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_consumer_phases_mrid ON energy_consumer_phases (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_consumer_phases_energy_consumer_mrid_phase ON energy_consumer_phases (energy_consumer_mrid, phase);",
        "CREATE INDEX IF NOT EXISTS energy_consumer_phases_name ON energy_consumer_phases (name);",
        "CREATE INDEX IF NOT EXISTS energy_consumer_phases_energy_consumer_mrid ON energy_consumer_phases (energy_consumer_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_consumers_mrid ON energy_consumers (mrid);",
        "CREATE INDEX IF NOT EXISTS energy_consumers_name ON energy_consumers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_source_phases_mrid ON energy_source_phases (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_source_phases_energy_source_mrid_phase ON energy_source_phases (energy_source_mrid, phase);",
        "CREATE INDEX IF NOT EXISTS energy_source_phases_name ON energy_source_phases (name);",
        "CREATE INDEX IF NOT EXISTS energy_source_phases_energy_source_mrid ON energy_source_phases (energy_source_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS energy_sources_mrid ON energy_sources (mrid);",
        "CREATE INDEX IF NOT EXISTS energy_sources_name ON energy_sources (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS equipment_equipment_containers_equipment_mrid_equipment_container_mrid ON equipment_equipment_containers (equipment_mrid, equipment_container_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_equipment_containers_equipment_mrid ON equipment_equipment_containers (equipment_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_equipment_containers_equipment_container_mrid ON equipment_equipment_containers (equipment_container_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS equipment_operational_restrictions_equipment_mrid_operational_restriction_mrid ON equipment_operational_restrictions (equipment_mrid, operational_restriction_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_operational_restrictions_equipment_mrid ON equipment_operational_restrictions (equipment_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_operational_restrictions_operational_restriction_mrid ON equipment_operational_restrictions (operational_restriction_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS equipment_usage_points_equipment_mrid_usage_point_mrid ON equipment_usage_points (equipment_mrid, usage_point_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_usage_points_equipment_mrid ON equipment_usage_points (equipment_mrid);",
        "CREATE INDEX IF NOT EXISTS equipment_usage_points_usage_point_mrid ON equipment_usage_points (usage_point_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS equivalent_branches_mrid ON equivalent_branches (mrid);",
        "CREATE INDEX IF NOT EXISTS equivalent_branches_name ON equivalent_branches (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS ev_charging_units_mrid ON ev_charging_units (mrid);",
        "CREATE INDEX IF NOT EXISTS ev_charging_units_name ON ev_charging_units (name);",
        "CREATE INDEX IF NOT EXISTS ev_charging_units_power_electronics_connection_mrid ON ev_charging_units (power_electronics_connection_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS fault_indicators_mrid ON fault_indicators (mrid);",
        "CREATE INDEX IF NOT EXISTS fault_indicators_name ON fault_indicators (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS feeders_mrid ON feeders (mrid);",
        "CREATE INDEX IF NOT EXISTS feeders_name ON feeders (name);",
        "CREATE INDEX IF NOT EXISTS feeders_normal_energizing_substation_mrid ON feeders (normal_energizing_substation_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS fuses_mrid ON fuses (mrid);",
        "CREATE INDEX IF NOT EXISTS fuses_name ON fuses (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS geographical_regions_mrid ON geographical_regions (mrid);",
        "CREATE INDEX IF NOT EXISTS geographical_regions_name ON geographical_regions (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS grounds_mrid ON grounds (mrid);",
        "CREATE INDEX IF NOT EXISTS grounds_name ON grounds (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS ground_disconnectors_mrid ON ground_disconnectors (mrid);",
        "CREATE INDEX IF NOT EXISTS ground_disconnectors_name ON ground_disconnectors (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS grounding_impedances_mrid ON grounding_impedances (mrid);",
        "CREATE INDEX IF NOT EXISTS grounding_impedances_name ON grounding_impedances (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS jumpers_mrid ON jumpers (mrid);",
        "CREATE INDEX IF NOT EXISTS jumpers_name ON jumpers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS junctions_mrid ON junctions (mrid);",
        "CREATE INDEX IF NOT EXISTS junctions_name ON junctions (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS linear_shunt_compensators_mrid ON linear_shunt_compensators (mrid);",
        "CREATE INDEX IF NOT EXISTS linear_shunt_compensators_name ON linear_shunt_compensators (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS load_break_switches_mrid ON load_break_switches (mrid);",
        "CREATE INDEX IF NOT EXISTS load_break_switches_name ON load_break_switches (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS location_street_addresses_location_mrid_address_field ON location_street_addresses (location_mrid, address_field);",
        "CREATE INDEX IF NOT EXISTS location_street_addresses_location_mrid ON location_street_addresses (location_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS locations_mrid ON locations (mrid);",
        "CREATE INDEX IF NOT EXISTS locations_name ON locations (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS loops_mrid ON loops (mrid);",
        "CREATE INDEX IF NOT EXISTS loops_name ON loops (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS loops_substations_loop_mrid_substation_mrid ON loops_substations (loop_mrid, substation_mrid);",
        "CREATE INDEX IF NOT EXISTS loops_substations_loop_mrid ON loops_substations (loop_mrid);",
        "CREATE INDEX IF NOT EXISTS loops_substations_substation_mrid ON loops_substations (substation_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS lv_feeders_mrid ON lv_feeders (mrid);",
        "CREATE INDEX IF NOT EXISTS lv_feeders_name ON lv_feeders (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS meters_mrid ON meters (mrid);",
        "CREATE INDEX IF NOT EXISTS meters_name ON meters (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS no_load_tests_mrid ON no_load_tests (mrid);",
        "CREATE INDEX IF NOT EXISTS no_load_tests_name ON no_load_tests (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS open_circuit_tests_mrid ON open_circuit_tests (mrid);",
        "CREATE INDEX IF NOT EXISTS open_circuit_tests_name ON open_circuit_tests (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS operational_restrictions_mrid ON operational_restrictions (mrid);",
        "CREATE INDEX IF NOT EXISTS operational_restrictions_name ON operational_restrictions (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS organisations_mrid ON organisations (mrid);",
        "CREATE INDEX IF NOT EXISTS organisations_name ON organisations (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS overhead_wire_info_mrid ON overhead_wire_info (mrid);",
        "CREATE INDEX IF NOT EXISTS overhead_wire_info_name ON overhead_wire_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS pan_demand_response_functions_mrid ON pan_demand_response_functions (mrid);",
        "CREATE INDEX IF NOT EXISTS pan_demand_response_functions_name ON pan_demand_response_functions (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS per_length_phase_impedances_mrid ON per_length_phase_impedances (mrid);",
        "CREATE INDEX IF NOT EXISTS per_length_phase_impedances_name ON per_length_phase_impedances (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS per_length_sequence_impedances_mrid ON per_length_sequence_impedances (mrid);",
        "CREATE INDEX IF NOT EXISTS per_length_sequence_impedances_name ON per_length_sequence_impedances (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS phase_impedance_data_per_length_phase_impedance_mrid_from_phase_to_phase ON phase_impedance_data (per_length_phase_impedance_mrid, from_phase, to_phase);",
        "CREATE INDEX IF NOT EXISTS phase_impedance_data_per_length_phase_impedance_mrid ON phase_impedance_data (per_length_phase_impedance_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS petersen_coils_mrid ON petersen_coils (mrid);",
        "CREATE INDEX IF NOT EXISTS petersen_coils_name ON petersen_coils (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS photo_voltaic_units_mrid ON photo_voltaic_units (mrid);",
        "CREATE INDEX IF NOT EXISTS photo_voltaic_units_name ON photo_voltaic_units (name);",
        "CREATE INDEX IF NOT EXISTS photo_voltaic_units_power_electronics_connection_mrid ON photo_voltaic_units (power_electronics_connection_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS poles_mrid ON poles (mrid);",
        "CREATE INDEX IF NOT EXISTS poles_name ON poles (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS position_points_location_mrid_sequence_number ON position_points (location_mrid, sequence_number);",
        "CREATE UNIQUE INDEX IF NOT EXISTS potential_transformer_info_mrid ON potential_transformer_info (mrid);",
        "CREATE INDEX IF NOT EXISTS potential_transformer_info_name ON potential_transformer_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS potential_transformers_mrid ON potential_transformers (mrid);",
        "CREATE INDEX IF NOT EXISTS potential_transformers_name ON potential_transformers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_electronics_connections_mrid ON power_electronics_connections (mrid);",
        "CREATE INDEX IF NOT EXISTS power_electronics_connections_name ON power_electronics_connections (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_electronics_connection_phases_mrid ON power_electronics_connection_phases (mrid);",
        "CREATE INDEX IF NOT EXISTS power_electronics_connection_phases_name ON power_electronics_connection_phases (name);",
        "CREATE INDEX IF NOT EXISTS power_electronics_connection_phases_power_electronics_connection_mrid ON power_electronics_connection_phases (power_electronics_connection_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_electronics_wind_units_mrid ON power_electronics_wind_units (mrid);",
        "CREATE INDEX IF NOT EXISTS power_electronics_wind_units_name ON power_electronics_wind_units (name);",
        "CREATE INDEX IF NOT EXISTS power_electronics_wind_units_power_electronics_connection_mrid ON power_electronics_wind_units (power_electronics_connection_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_transformer_ends_mrid ON power_transformer_ends (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_transformer_ends_power_transformer_mrid_end_number ON power_transformer_ends (power_transformer_mrid, end_number);",
        "CREATE INDEX IF NOT EXISTS power_transformer_ends_name ON power_transformer_ends (name);",
        "CREATE INDEX IF NOT EXISTS power_transformer_ends_star_impedance_mrid ON power_transformer_ends (star_impedance_mrid);",
        "CREATE INDEX IF NOT EXISTS power_transformer_ends_power_transformer_mrid ON power_transformer_ends (power_transformer_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_transformer_end_ratings_power_transformer_end_mrid_cooling_type ON power_transformer_end_ratings (power_transformer_end_mrid, cooling_type);",
        "CREATE INDEX IF NOT EXISTS power_transformer_end_ratings_power_transformer_end_mrid ON power_transformer_end_ratings (power_transformer_end_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_transformer_info_mrid ON power_transformer_info (mrid);",
        "CREATE INDEX IF NOT EXISTS power_transformer_info_name ON power_transformer_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS power_transformers_mrid ON power_transformers (mrid);",
        "CREATE INDEX IF NOT EXISTS power_transformers_name ON power_transformers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_function_thresholds_protection_relay_function_mrid_sequence_number ON protection_relay_function_thresholds (protection_relay_function_mrid, sequence_number);",
        "CREATE INDEX IF NOT EXISTS protection_relay_function_thresholds_protection_relay_function_mrid ON protection_relay_function_thresholds (protection_relay_function_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_function_time_limits_protection_relay_function_mrid_sequence_number ON protection_relay_function_time_limits (protection_relay_function_mrid, sequence_number);",
        "CREATE INDEX IF NOT EXISTS protection_relay_function_time_limits_protection_relay_function_mrid ON protection_relay_function_time_limits (protection_relay_function_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_functions_protected_switches_protection_relay_function_mrid_protected_switch_mrid ON protection_relay_functions_protected_switches (protection_relay_function_mrid, protected_switch_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_functions_protected_switches_protection_relay_function_mrid ON protection_relay_functions_protected_switches (protection_relay_function_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_functions_protected_switches_protected_switch_mrid ON protection_relay_functions_protected_switches (protected_switch_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_functions_sensors_protection_relay_function_mrid_sensor_mrid ON protection_relay_functions_sensors (protection_relay_function_mrid, sensor_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_functions_sensors_protection_relay_function_mrid ON protection_relay_functions_sensors (protection_relay_function_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_functions_sensors_sensor_mrid ON protection_relay_functions_sensors (sensor_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_schemes_mrid ON protection_relay_schemes (mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_schemes_name ON protection_relay_schemes (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_schemes_protection_relay_functions_protection_relay_scheme_mrid_protection_relay_function_mrid ON protection_relay_schemes_protection_relay_functions (protection_relay_scheme_mrid, protection_relay_function_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_schemes_protection_relay_functions_protection_relay_scheme_mrid ON protection_relay_schemes_protection_relay_functions (protection_relay_scheme_mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_schemes_protection_relay_functions_protection_relay_function_mrid ON protection_relay_schemes_protection_relay_functions (protection_relay_function_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS protection_relay_systems_mrid ON protection_relay_systems (mrid);",
        "CREATE INDEX IF NOT EXISTS protection_relay_systems_name ON protection_relay_systems (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS ratio_tap_changers_mrid ON ratio_tap_changers (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS ratio_tap_changers_transformer_end_mrid ON ratio_tap_changers (transformer_end_mrid);",
        "CREATE INDEX IF NOT EXISTS ratio_tap_changers_name ON ratio_tap_changers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS reactive_capability_curves_mrid ON reactive_capability_curves (mrid);",
        "CREATE INDEX IF NOT EXISTS reactive_capability_curves_name ON reactive_capability_curves (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS reclosers_mrid ON reclosers (mrid);",
        "CREATE INDEX IF NOT EXISTS reclosers_name ON reclosers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS reclose_delays_relay_info_mrid_sequence_number ON reclose_delays (relay_info_mrid, sequence_number);",
        "CREATE INDEX IF NOT EXISTS reclose_delays_relay_info_mrid ON reclose_delays (relay_info_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS relay_info_mrid ON relay_info (mrid);",
        "CREATE INDEX IF NOT EXISTS relay_info_name ON relay_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS remote_controls_mrid ON remote_controls (mrid);",
        "CREATE INDEX IF NOT EXISTS remote_controls_name ON remote_controls (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS remote_sources_mrid ON remote_sources (mrid);",
        "CREATE INDEX IF NOT EXISTS remote_sources_name ON remote_sources (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS series_compensators_mrid ON series_compensators (mrid);",
        "CREATE INDEX IF NOT EXISTS series_compensators_name ON series_compensators (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS short_circuit_tests_mrid ON short_circuit_tests (mrid);",
        "CREATE INDEX IF NOT EXISTS short_circuit_tests_name ON short_circuit_tests (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS shunt_compensator_info_mrid ON shunt_compensator_info (mrid);",
        "CREATE INDEX IF NOT EXISTS shunt_compensator_info_name ON shunt_compensator_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS sites_mrid ON sites (mrid);",
        "CREATE INDEX IF NOT EXISTS sites_name ON sites (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS streetlights_mrid ON streetlights (mrid);",
        "CREATE INDEX IF NOT EXISTS streetlights_name ON streetlights (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS sub_geographical_regions_mrid ON sub_geographical_regions (mrid);",
        "CREATE INDEX IF NOT EXISTS sub_geographical_regions_name ON sub_geographical_regions (name);",
        "CREATE INDEX IF NOT EXISTS sub_geographical_regions_geographical_region_mrid ON sub_geographical_regions (geographical_region_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS substations_mrid ON substations (mrid);",
        "CREATE INDEX IF NOT EXISTS substations_name ON substations (name);",
        "CREATE INDEX IF NOT EXISTS substations_sub_geographical_region_mrid ON substations (sub_geographical_region_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS static_var_compensators_mrid ON static_var_compensators (mrid);",
        "CREATE INDEX IF NOT EXISTS static_var_compensators_name ON static_var_compensators (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS switch_info_mrid ON switch_info (mrid);",
        "CREATE INDEX IF NOT EXISTS switch_info_name ON switch_info (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS synchronous_machines_mrid ON synchronous_machines (mrid);",
        "CREATE INDEX IF NOT EXISTS synchronous_machines_name ON synchronous_machines (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS synchronous_machines_reactive_capability_curves_synchronous_machine_mrid_reactive_capability_curve_mrid ON synchronous_machines_reactive_capability_curves (synchronous_machine_mrid, reactive_capability_curve_mrid);",
        "CREATE INDEX IF NOT EXISTS synchronous_machines_reactive_capability_curves_synchronous_machine_mrid ON synchronous_machines_reactive_capability_curves (synchronous_machine_mrid);",
        "CREATE INDEX IF NOT EXISTS synchronous_machines_reactive_capability_curves_reactive_capability_curve_mrid ON synchronous_machines_reactive_capability_curves (reactive_capability_curve_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS tap_changer_controls_mrid ON tap_changer_controls (mrid);",
        "CREATE INDEX IF NOT EXISTS tap_changer_controls_name ON tap_changer_controls (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS terminals_mrid ON terminals (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS terminals_conducting_equipment_mrid_sequence_number ON terminals (conducting_equipment_mrid, sequence_number);",
        "CREATE INDEX IF NOT EXISTS terminals_name ON terminals (name);",
        "CREATE INDEX IF NOT EXISTS terminals_connectivity_node_mrid ON terminals (connectivity_node_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS transformer_end_info_mrid ON transformer_end_info (mrid);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_name ON transformer_end_info (name);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_transformer_tank_info_mrid ON transformer_end_info (transformer_tank_info_mrid);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_energised_end_no_load_tests ON transformer_end_info (energised_end_no_load_tests);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_energised_end_short_circuit_tests ON transformer_end_info (energised_end_short_circuit_tests);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_grounded_end_short_circuit_tests ON transformer_end_info (grounded_end_short_circuit_tests);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_open_end_open_circuit_tests ON transformer_end_info (open_end_open_circuit_tests);",
        "CREATE INDEX IF NOT EXISTS transformer_end_info_energised_end_open_circuit_tests ON transformer_end_info (energised_end_open_circuit_tests);",
        "CREATE UNIQUE INDEX IF NOT EXISTS transformer_star_impedances_mrid ON transformer_star_impedances (mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS transformer_star_impedances_transformer_end_info_mrid ON transformer_star_impedances (transformer_end_info_mrid);",
        "CREATE INDEX IF NOT EXISTS transformer_star_impedances_name ON transformer_star_impedances (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS transformer_tank_info_mrid ON transformer_tank_info (mrid);",
        "CREATE INDEX IF NOT EXISTS transformer_tank_info_name ON transformer_tank_info (name);",
        "CREATE INDEX IF NOT EXISTS transformer_tank_info_power_transformer_info_mrid ON transformer_tank_info (power_transformer_info_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS usage_points_mrid ON usage_points (mrid);",
        "CREATE INDEX IF NOT EXISTS usage_points_name ON usage_points (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS usage_points_end_devices_usage_point_mrid_end_device_mrid ON usage_points_end_devices (usage_point_mrid, end_device_mrid);",
        "CREATE INDEX IF NOT EXISTS usage_points_end_devices_usage_point_mrid ON usage_points_end_devices (usage_point_mrid);",
        "CREATE INDEX IF NOT EXISTS usage_points_end_devices_end_device_mrid ON usage_points_end_devices (end_device_mrid);",
    ),
    targetDatabases = setOf(DatabaseType.NETWORK_MODEL)
)

// ###################
// # Diagram Changes #
// ###################

@Suppress("ObjectPropertyName")
private val `retype incorrectly converted columns diagram` = Change(
    listOf(
        *alterToNotNullable("diagram_object_points", "x_position", "NUMBER", "0.0"),
        *alterToNotNullable("diagram_object_points", "y_position", "NUMBER", "0.0"),
        *alterToNullable("diagram_objects", "num_diagram_objects", "INTEGER"),
        *alterToNullable("diagrams", "num_diagram_objects", "INTEGER"),
    ),
    targetDatabases = setOf(DatabaseType.DIAGRAM)
)

@Suppress("ObjectPropertyName")
private val `add missing diagram indexes` = Change(
    listOf(
        "CREATE UNIQUE INDEX IF NOT EXISTS name_types_name ON name_types (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS names_identified_object_mrid_name_type_name_name ON names (identified_object_mrid, name_type_name, name);",
        "CREATE INDEX IF NOT EXISTS names_identified_object_mrid ON names (identified_object_mrid);",
        "CREATE INDEX IF NOT EXISTS names_name ON names (name);",
        "CREATE INDEX IF NOT EXISTS names_name_type_name ON names (name_type_name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS diagram_object_points_diagram_object_mrid_sequence_number ON diagram_object_points (diagram_object_mrid, sequence_number);",
        "CREATE INDEX IF NOT EXISTS diagram_object_points_diagram_object_mrid ON diagram_object_points (diagram_object_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS diagram_objects_mrid ON diagram_objects (mrid);",
        "CREATE INDEX IF NOT EXISTS diagram_objects_name ON diagram_objects (name);",
        "CREATE INDEX IF NOT EXISTS diagram_objects_identified_object_mrid ON diagram_objects (identified_object_mrid);",
        "CREATE INDEX IF NOT EXISTS diagram_objects_diagram_mrid ON diagram_objects (diagram_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS diagrams_mrid ON diagrams (mrid);",
        "CREATE INDEX IF NOT EXISTS diagrams_name ON diagrams (name);",
    ),
    targetDatabases = setOf(DatabaseType.DIAGRAM)
)

// ####################
// # Customer Changes #
// ####################

@Suppress("ObjectPropertyName")
private val `retype missed non-null columns customer` = Change(
    listOf(
        *alterToNullable("customer_agreements", "comment", "TEXT"),
        *alterToNullableWithIndex("organisations", "name", "TEXT"),
        *alterToNullable("organisations", "description", "TEXT"),
        *alterToNullable("organisations", "num_diagram_objects", "INTEGER"),
        *alterToNullable("pricing_structures", "comment", "TEXT"),
        *alterToNullable("tariffs", "comment", "TEXT"),
    ),
    targetDatabases = setOf(DatabaseType.CUSTOMER)
)

@Suppress("ObjectPropertyName")
private val `retype incorrectly converted columns customer` = Change(
    listOf(
        *alterToNullable("customer_agreements", "num_diagram_objects", "INTEGER"),
        *alterToNullable("customers", "num_diagram_objects", "INTEGER"),
        *alterToNullable("organisations", "num_diagram_objects", "INTEGER"),
        *alterToNullable("pricing_structures", "num_diagram_objects", "INTEGER"),
        *alterToNullable("tariffs", "num_diagram_objects", "INTEGER"),
    ),
    targetDatabases = setOf(DatabaseType.CUSTOMER)
)

@Suppress("ObjectPropertyName")
private val `add missing customer indexes` = Change(
    listOf(
        "CREATE UNIQUE INDEX IF NOT EXISTS name_types_name ON name_types (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS names_identified_object_mrid_name_type_name_name ON names (identified_object_mrid, name_type_name, name);",
        "CREATE INDEX IF NOT EXISTS names_identified_object_mrid ON names (identified_object_mrid);",
        "CREATE INDEX IF NOT EXISTS names_name ON names (name);",
        "CREATE INDEX IF NOT EXISTS names_name_type_name ON names (name_type_name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS customer_agreements_mrid ON customer_agreements (mrid);",
        "CREATE INDEX IF NOT EXISTS customer_agreements_name ON customer_agreements (name);",
        "CREATE INDEX IF NOT EXISTS customer_agreements_customer_mrid ON customer_agreements (customer_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS customer_agreements_pricing_structures_customer_agreement_mrid_pricing_structure_mrid ON customer_agreements_pricing_structures (customer_agreement_mrid, pricing_structure_mrid);",
        "CREATE INDEX IF NOT EXISTS customer_agreements_pricing_structures_customer_agreement_mrid ON customer_agreements_pricing_structures (customer_agreement_mrid);",
        "CREATE INDEX IF NOT EXISTS customer_agreements_pricing_structures_pricing_structure_mrid ON customer_agreements_pricing_structures (pricing_structure_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS customers_mrid ON customers (mrid);",
        "CREATE INDEX IF NOT EXISTS customers_name ON customers (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS organisations_mrid ON organisations (mrid);",
        "CREATE INDEX IF NOT EXISTS organisations_name ON organisations (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS pricing_structures_mrid ON pricing_structures (mrid);",
        "CREATE INDEX IF NOT EXISTS pricing_structures_name ON pricing_structures (name);",
        "CREATE UNIQUE INDEX IF NOT EXISTS pricing_structures_tariffs_pricing_structure_mrid_tariff_mrid ON pricing_structures_tariffs (pricing_structure_mrid, tariff_mrid);",
        "CREATE INDEX IF NOT EXISTS pricing_structures_tariffs_pricing_structure_mrid ON pricing_structures_tariffs (pricing_structure_mrid);",
        "CREATE INDEX IF NOT EXISTS pricing_structures_tariffs_tariff_mrid ON pricing_structures_tariffs (tariff_mrid);",
        "CREATE UNIQUE INDEX IF NOT EXISTS tariffs_mrid ON tariffs (mrid);",
        "CREATE INDEX IF NOT EXISTS tariffs_name ON tariffs (name);",
    ),
    targetDatabases = setOf(DatabaseType.CUSTOMER)
)

@Suppress("SameParameterValue")
private fun alterToNullableWithIndex(tableName: String, columnName: String, type: String): Array<String> =
    arrayOf(
        "DROP INDEX IF EXISTS ${tableName}_$columnName",
        *alterToNullable(tableName, columnName, type),
        "CREATE INDEX ${tableName}_$columnName ON $tableName ($columnName)",
    )

private fun alterToNullable(tableName: String, columnName: String, type: String): Array<String> =
    arrayOf(
        "ALTER TABLE $tableName RENAME COLUMN $columnName to ${columnName}_old",
        "ALTER TABLE $tableName ADD COLUMN $columnName $type",
        "UPDATE $tableName SET $columnName = ${columnName}_old",
        "ALTER TABLE $tableName DROP COLUMN ${columnName}_old",
    )

@Suppress("SameParameterValue")
private fun alterToNotNullable(tableName: String, columnName: String, type: String, default: String): Array<String> =
    arrayOf(
        "ALTER TABLE $tableName RENAME COLUMN $columnName to ${columnName}_old",
        "ALTER TABLE $tableName ADD COLUMN $columnName $type DEFAULT $default NOT NULL",
        "UPDATE $tableName SET $columnName = COALESCE(${columnName}_old, $default)",
        "ALTER TABLE $tableName DROP COLUMN ${columnName}_old",
    )
